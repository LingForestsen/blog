<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sen.blog.dao.CommentDao">
    <cache type="org.mybatis.caches.ehcache.EhcacheCache"/>
    <sql id="commentColumns">
        a.comment_id AS commentId,
        a.comment_pid AS commentPid,
        a.comment_pname AS commentPname,
        a.comment_article_id AS commentArticleId,
        a.comment_author_name AS commentAuthorName,
        a.comment_author_email AS commentAuthorEmail,
        a.comment_author_url AS commentAuthorUrl,
        a.comment_author_avatar AS commentAuthorAvatar,
        a.comment_content AS commentContent,
        a.comment_agent AS commentAgent,
        a.comment_ip AS commentIp,
        a.comment_create_time AS commentCreateTime,
        a.comment_role AS commentRole
    </sql>
    <select id="listRecentComment" resultType="Comment">
        SELECT
        <include refid="commentColumns"/>
        ,b.article_title AS "article.articleTitle"
        FROM comment AS a
        LEFT JOIN article b
        ON a.comment_article_id = b.article_id
        WHERE a.comment_role=0 ORDER BY a.comment_id DESC limit #{pageIndex},#{pageSize};
    </select>
    <select id="selectAll" resultType="Comment">
        SELECT
        <include refid="commentColumns"/>
        ,b.article_title AS "article.articleTitle"
        FROM comment AS a
        LEFT JOIN article b
        ON a.comment_article_id = b.article_id
        ORDER BY a.comment_id DESC
    </select>
    <select id="selectById" resultType="Comment">
        SELECT
        <include refid="commentColumns"/>
        FROM comment a
        WHERE a.comment_id = #{commentId}
    </select>
    <select id="selectByArticleId" resultType="Comment">
        SELECT
        <include refid="commentColumns"/>
        FROM comment a
        WHERE a.comment_article_id = #{articleId};
    </select>
    <select id="countByArticleId" resultType="java.lang.Integer">
        SELECT
        count(comment_article_id)
        FROM comment
        WHERE comment_article_id = #{articleId};
    </select>

    <insert id="insert" flushCache="true">
        INSERT INTO
        comment(
            comment_pid,
            comment_pname,
            comment_article_id,
            comment_author_name,
            comment_author_email,
            comment_author_url,
            comment_author_avatar,
            comment_content,
            comment_agent,
            comment_ip,
            comment_create_time,
            comment_role
        )
        VALUES (
            #{commentPid},
            #{commentPname},
            #{commentArticleId},
            #{commentAuthorName},
            #{commentAuthorEmail},
            #{commentAuthorUrl},
            #{commentAuthorAvatar},
            #{commentContent},
            #{commentAgent},
            #{commentIp},
            #{commentCreateTime},
            #{commentRole}
        )
    </insert>

    <update id="update" flushCache="true">
        UPDATE comment
        SET
        comment_author_name = #{commentAuthorName},
        comment_author_email = #{commentAuthorEmail},
        comment_author_url = #{commentAuthorUrl},
        comment_content = #{commentContent},
        comment_role = #{commentRole}
        WHERE comment_id = #{commentId};
    </update>

    <delete id="delete" flushCache="true">
        DELETE FROM comment
        WHERE comment_id = #{id}
    </delete>


</mapper>