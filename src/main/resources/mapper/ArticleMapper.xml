<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sen.blog.dao.ArticleDao">
    <cache type="org.mybatis.caches.ehcache.EhcacheCache"/>

    <resultMap id="articleCategory" type="Article">
        <id column="article_id" property="articleId"/>
        <result column="article_title" property="articleTitle"/>
        <result column="article_create_time" property="articleCreateTime"/>
        <result column="article_status" property="articleStatus"/>
        <collection property="categoryList" ofType="Category">
            <result column="category_name" property="categoryName"/>
        </collection>
    </resultMap>

    <sql id="articleColumns">
        a.article_id AS articleId,
        a.article_user_id AS articleUserId,
        a.article_title AS articleTitle,
        a.article_content AS articleContent,
        a.article_view_count AS articleViewCount,
        a.article_comment_count AS articleCommentCount,
        a.article_like_count AS articleLikCount,
        a.article_is_comment AS articleIsComment,
        a.article_status AS articleStatus,
        a.article_order AS articleOrder,
        a.article_update_time AS articleUpdateTime,
        a.article_create_time AS articleCreateTime,
        a.article_summary AS articleSummary
    </sql>

    <select id="selectAll"  resultType="Article">
        SELECT
        <include refid="articleColumns"/>
        FROM article AS a
        ORDER BY a.article_create_time DESC limit 5;
    </select>
    <select id="listArticleAndCategory" resultMap="articleCategory">
            SELECT
            a.article_id
            ,a.article_status
            ,a.article_create_time
            ,a.article_title
            ,IFNULL(c.category_name,"未分类") AS category_name
            FROM article a
            LEFT JOIN article_category_ref b
            ON a.article_id=b.article_id
            LEFT JOIN category c
            ON c.category_id=b.category_id
            ORDER BY a.article_create_time DESC, c.category_id
    </select>
    <select id="count" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM article;
    </select>
    <select id="selectById" resultType="Article">
        SELECT
        <include refid="articleColumns"/>
        FROM article AS a
        WHERE a.article_id = #{articleId}
    </select>
    <select id="countByUserId" resultType="java.lang.Integer">
        SELECT
        COUNT(*)
        FROM article
        WHERE article_user_id = #{userId}
        AND article_status = 1;
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="articleId" flushCache="true">
        INSERT INTO
        article(
        article_user_id,
        article_title,
        article_content,
        article_view_count,
        article_comment_count,
        article_like_count,
        article_is_comment,
        article_status,
        article_order,
        article_update_time,
        article_create_time,
        article_summary
        )
        VALUES(
        #{articleUserId},
        #{articleTitle},
        #{articleContent},
        #{articleViewCount},
        #{articleCommentCount},
        #{articleLikeCount},
        #{articleIsComment},
        #{articleStatus},
        #{articleOrder},
        #{articleUpdateTime},
        #{articleCreateTime},
        #{articleSummary}
        )
    </insert>
    <update id="update" useGeneratedKeys="true" keyProperty="articleId" flushCache="true">
        UPDATE article
        SET
        article_user_id = #{articleUserId},
        article_title = #{articleTitle},
        article_content = #{articleContent},
        article_view_count = #{articleViewCount},
        article_comment_count = #{articleCommentCount},
        article_like_count = #{articleLikeCount},
        article_is_comment = #{articleIsComment},
        article_status = #{articleStatus},
        article_order = #{articleOrder},
        article_update_time = #{articleUpdateTime},
        article_summary = #{articleSummary}
        WHERE article_id = #{articleId}
    </update>

    <delete id="delete" flushCache="true">
        DELETE FROM article
        WHERE article_id = #{id}
    </delete>

</mapper>