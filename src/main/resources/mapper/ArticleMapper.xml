<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sen.blog.dao.ArticleDao">
    <cache type="org.mybatis.caches.ehcache.EhcacheCache"/>

    <resultMap id="articleCategory" type="Article">
        <id column="article_id" property="articleId"/>
        <result column="article_title" property="articleTitle"/>
        <result column="article_create_time" property="articleCreateTime"/>
        <result column="article_status" property="articleStatus"/>
        <result column="article_summary" property="articleSummary"/>
        <result column="article_view_count" property="articleViewCount"/>
        <result column="article_comment_count" property="articleCommentCount"/>
        <collection property="categoryList" ofType="Category">
            <result column="category_name" property="categoryName"/>
            <result column="category_id" property="categoryId"/>
        </collection>
    </resultMap>

    <sql id="articleColumns">
        a.article_id AS articleId,
        a.article_user_id AS articleUserId,
        a.article_title AS articleTitle,
        a.article_content AS articleContent,
        a.article_view_count AS articleViewCount,
        a.article_comment_count AS articleCommentCount,
        a.article_like_count AS articleLikeCount,
        a.article_is_comment AS articleIsComment,
        a.article_status AS articleStatus,
        a.article_order AS articleOrder,
        a.article_update_time AS articleUpdateTime,
        a.article_create_time AS articleCreateTime,
        a.article_summary AS articleSummary
    </sql>

    <select id="selectAll"  resultType="Article">
        SELECT
        <include refid="articleColumns"/>
        FROM article AS a
        ORDER BY a.article_create_time DESC
    </select>
    <select id="listArticleAndCategory" parameterType="java.util.Map" resultMap="articleCategory">
            SELECT
            a.article_id
            ,a.article_status
            ,a.article_create_time
            ,a.article_title
            ,a.article_summary
            ,a.article_view_count
            ,a.article_comment_count
            ,IFNULL(c.category_name,"未分类") AS category_name
            ,c.category_id
            FROM article a
            LEFT JOIN article_category_ref b
            ON a.article_id=b.article_id
            LEFT JOIN category c
            ON c.category_id=b.category_id
            <where>
                <if test="status != null and status != ''">
                AND a.article_status = #{status}
                </if>
                <if test="keywords != null and keywords != ''">
                AND a.article_title like concat("%",#{keywords},"%")
                </if>
            </where>
            ORDER BY a.article_create_time DESC, c.category_id
    </select>
    <select id="countByCriteria" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM article a
        <where>
            <if test="status != null and status != ''">
                AND a.article_status = #{status}
            </if>
            <if test="keywords != null and keywords != ''">
                AND a.article_title like concat("%",#{keywords},"%")
            </if>
        </where>
    </select>
    <select id="selectById" resultType="Article">
        SELECT
        <include refid="articleColumns"/>
        FROM article AS a
        WHERE a.article_id = #{articleId}
    </select>
    <select id="countByUserId" resultType="java.lang.Integer">
        SELECT
        COUNT(*)
        FROM article
        WHERE article_user_id = #{userId}
        AND article_status = 1;
    </select>
    <select id="listByCategoryIds" resultType="Article">
        SELECT
        <include refid="articleColumns"/>
        FROM article a
        JOIN article_category_ref ref
        ON a.article_id = ref.article_id
        WHERE ref.category_id
        <if test="categoryIds != null">
            IN
            <foreach collection="categoryIds" item="categoryId" open="(" close=")" separator=",">
                #{categoryId}
            </foreach>
        </if>
        limit 5;
    </select>
    <select id="listMostViewCountArticle" resultType="Article">
        SELECT
        <include refid="articleColumns"/>
        FROM article a
        WHERE a.article_status = 1
        ORDER BY a.article_view_count
        limit #{pageSize};
    </select>
    <select id="selectAfterArticle" resultType="Article">
        SELECT
        <include refid="articleColumns"/>
        FROM article a
        <![CDATA[WHERE a.article_id > #{articleId} ]]>
        AND a.article_status = 1
        ORDER BY a.article_id
        limit 1;
    </select>
    <select id="selectBeforeArticle" resultType="Article">
        SELECT
        <include refid="articleColumns"/>
        FROM article a
        <![CDATA[WHERE a.article_id < #{articleId} ]]>
        ORDER BY a.article_id DESC
        limit 1;
    </select>
    <select id="listRandArticle" resultType="Article">
        SELECT
        <include refid="articleColumns"/>
        FROM article a
        ORDER BY RAND()
        limit #{pageSize};
    </select>
    <select id="sumView" resultType="java.lang.Integer">
        SELECT
        SUM(article_view_count)
        FROM article
        WHERE article_status = 1
    </select>
    <select id="countArticle" resultType="java.lang.Integer">
        SELECT
        COUNT(article_id)
        FROM article
        WHERE article_status = 1
    </select>
    <select id="sumComment" resultType="java.lang.Integer">
        SELECT
        SUM(article_comment_count)
        FROM article
        WHERE article_status = 1
    </select>
    <select id="listMostCommentArticle" resultType="Article">
        SELECT
        <include refid="articleColumns"/>
        FROM article a
        ORDER BY article_comment_count DESC
        limit #{pageSize};
    </select>
    <select id="listArticlesByTagId" resultType="Article">
        SELECT
        <include refid="articleColumns"/>
        FROM  article a
        JOIN article_tag_ref ref
        ON a.article_id = ref.article_id
        WHERE ref.tag_id = #{tagId}
    </select>
    <select id="listArticlesByCategoryId" resultType="Article">
        SELECT
        <include refid="articleColumns"/>
        FROM  article a
        JOIN article_category_ref ref
        ON a.article_id = ref.article_id
        WHERE ref.category_id = #{categoryId}
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="articleId" flushCache="true">
        INSERT INTO
        article(
        article_user_id,
        article_title,
        article_content,
        article_view_count,
        article_comment_count,
        article_like_count,
        article_is_comment,
        article_status,
        article_order,
        article_update_time,
        article_create_time,
        article_summary
        )
        VALUES(
        #{articleUserId},
        #{articleTitle},
        #{articleContent},
        #{articleViewCount},
        #{articleCommentCount},
        #{articleLikeCount},
        #{articleIsComment},
        #{articleStatus},
        #{articleOrder},
        #{articleUpdateTime},
        #{articleCreateTime},
        #{articleSummary}
        )
    </insert>
    <update id="update" useGeneratedKeys="true" keyProperty="articleId" flushCache="true">
        UPDATE article
        SET
        article_user_id = #{articleUserId},
        article_title = #{articleTitle},
        article_content = #{articleContent},
        article_view_count = #{articleViewCount},
        article_comment_count = #{articleCommentCount},
        article_like_count = #{articleLikeCount},
        article_is_comment = #{articleIsComment},
        article_status = #{articleStatus},
        article_order = #{articleOrder},
        article_update_time = #{articleUpdateTime},
        article_summary = #{articleSummary}
        WHERE article_id = #{articleId}
    </update>

    <delete id="delete" flushCache="true">
        DELETE FROM article
        WHERE article_id = #{id}
    </delete>

</mapper>